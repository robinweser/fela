// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Using babel-plugin-fela should precompile static styles 1`] = `
Array [
  "/__fixtures__/createComponent.js",
  "import { createComponent } from 'react-fela';

const rule = ({ fontSize, padding }, renderer) => {
  if (!renderer.cache._sjf8sr_trbawt_jtk9xa_wh7g8r) {
    renderer.cache._sjf8sr_trbawt_jtk9xa_wh7g8r = {
      type: 'PRECOMPILATION'
    };
    if (!renderer.cache['colorred']) renderer.cache['colorred'] = {
      type: 'RULE',
      className: '_sjf8sr',
      selector: '._sjf8sr',
      declaration: 'color:red',
      media: '',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px)backgroundColorred']) renderer.cache['(min-height: 300px)backgroundColorred'] = {
      type: 'RULE',
      className: '_trbawt',
      selector: '._trbawt',
      declaration: 'background-color:red',
      media: '(min-height: 300px)',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px)lineHeight2']) renderer.cache['(min-height: 300px)lineHeight2'] = {
      type: 'RULE',
      className: '_jtk9xa',
      selector: '._jtk9xa',
      declaration: 'line-height:2',
      media: '(min-height: 300px)',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px):hovercolorblack']) renderer.cache['(min-height: 300px):hovercolorblack'] = {
      type: 'RULE',
      className: '_wh7g8r',
      selector: '._wh7g8r:hover',
      declaration: 'color:black',
      media: '(min-height: 300px)',
      support: ''
    };
  }

  return {
    _className: '_sjf8sr _trbawt _jtk9xa _wh7g8r',

    fontSize,

    '@media (min-height: 300px)': {
      ':hover': {
        paddingLeft: padding
      }
    }
  };
};

export default createComponent(rule);",
]
`;

exports[`Using babel-plugin-fela should precompile static styles 2`] = `
Array [
  "/__fixtures__/createComponentEmbedded.js",
  "import { createComponent } from 'react-fela';

export default createComponent(({ fontSize, padding }, renderer) => {
  if (!renderer.cache._sjf8sr_trbawt_jtk9xa_wh7g8r) {
    renderer.cache._sjf8sr_trbawt_jtk9xa_wh7g8r = {
      type: 'PRECOMPILATION'
    };
    if (!renderer.cache['colorred']) renderer.cache['colorred'] = {
      type: 'RULE',
      className: '_sjf8sr',
      selector: '._sjf8sr',
      declaration: 'color:red',
      media: '',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px)backgroundColorred']) renderer.cache['(min-height: 300px)backgroundColorred'] = {
      type: 'RULE',
      className: '_trbawt',
      selector: '._trbawt',
      declaration: 'background-color:red',
      media: '(min-height: 300px)',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px)lineHeight2']) renderer.cache['(min-height: 300px)lineHeight2'] = {
      type: 'RULE',
      className: '_jtk9xa',
      selector: '._jtk9xa',
      declaration: 'line-height:2',
      media: '(min-height: 300px)',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px):hovercolorblack']) renderer.cache['(min-height: 300px):hovercolorblack'] = {
      type: 'RULE',
      className: '_wh7g8r',
      selector: '._wh7g8r:hover',
      declaration: 'color:black',
      media: '(min-height: 300px)',
      support: ''
    };
  }

  return {
    _className: '_sjf8sr _trbawt _jtk9xa _wh7g8r',

    fontSize,

    '@media (min-height: 300px)': {
      ':hover': {
        paddingLeft: padding
      }
    }
  };
});",
]
`;

exports[`Using babel-plugin-fela should precompile static styles 3`] = `
Array [
  "/__fixtures__/createComponentEmptyParameter.js",
  "import { createComponent } from 'react-fela';

const rule = (_, renderer) => {
  if (!renderer.cache._sjf8sr_trbawt_jtk9xa_wh7g8r) {
    renderer.cache._sjf8sr_trbawt_jtk9xa_wh7g8r = {
      type: 'PRECOMPILATION'
    };
    if (!renderer.cache['colorred']) renderer.cache['colorred'] = {
      type: 'RULE',
      className: '_sjf8sr',
      selector: '._sjf8sr',
      declaration: 'color:red',
      media: '',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px)backgroundColorred']) renderer.cache['(min-height: 300px)backgroundColorred'] = {
      type: 'RULE',
      className: '_trbawt',
      selector: '._trbawt',
      declaration: 'background-color:red',
      media: '(min-height: 300px)',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px)lineHeight2']) renderer.cache['(min-height: 300px)lineHeight2'] = {
      type: 'RULE',
      className: '_jtk9xa',
      selector: '._jtk9xa',
      declaration: 'line-height:2',
      media: '(min-height: 300px)',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px):hovercolorblack']) renderer.cache['(min-height: 300px):hovercolorblack'] = {
      type: 'RULE',
      className: '_wh7g8r',
      selector: '._wh7g8r:hover',
      declaration: 'color:black',
      media: '(min-height: 300px)',
      support: ''
    };
  }

  return {
    _className: '_sjf8sr _trbawt _jtk9xa _wh7g8r'
  };
};

export default createComponent(rule);",
]
`;

exports[`Using babel-plugin-fela should precompile static styles 4`] = `
Array [
  "/__fixtures__/createComponentFunctionExpression.js",
  "import { createComponent } from 'react-fela';

function rule({ fontSize, padding }, renderer) {
  if (!renderer.cache._sjf8sr_trbawt_jtk9xa_wh7g8r) {
    renderer.cache._sjf8sr_trbawt_jtk9xa_wh7g8r = {
      type: 'PRECOMPILATION'
    };
    if (!renderer.cache['colorred']) renderer.cache['colorred'] = {
      type: 'RULE',
      className: '_sjf8sr',
      selector: '._sjf8sr',
      declaration: 'color:red',
      media: '',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px)backgroundColorred']) renderer.cache['(min-height: 300px)backgroundColorred'] = {
      type: 'RULE',
      className: '_trbawt',
      selector: '._trbawt',
      declaration: 'background-color:red',
      media: '(min-height: 300px)',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px)lineHeight2']) renderer.cache['(min-height: 300px)lineHeight2'] = {
      type: 'RULE',
      className: '_jtk9xa',
      selector: '._jtk9xa',
      declaration: 'line-height:2',
      media: '(min-height: 300px)',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px):hovercolorblack']) renderer.cache['(min-height: 300px):hovercolorblack'] = {
      type: 'RULE',
      className: '_wh7g8r',
      selector: '._wh7g8r:hover',
      declaration: 'color:black',
      media: '(min-height: 300px)',
      support: ''
    };
  }

  return {
    _className: '_sjf8sr _trbawt _jtk9xa _wh7g8r',

    fontSize,

    '@media (min-height: 300px)': {
      ':hover': {
        paddingLeft: padding
      }
    }
  };
}

export default createComponent(rule);",
]
`;

exports[`Using babel-plugin-fela should precompile static styles 5`] = `
Array [
  "/__fixtures__/createComponentFunctionVariable.js",
  "import { createComponent } from 'react-fela';

const rule = function ({ fontSize, padding }, renderer) {
  if (!renderer.cache._sjf8sr_trbawt_jtk9xa_wh7g8r) {
    renderer.cache._sjf8sr_trbawt_jtk9xa_wh7g8r = {
      type: 'PRECOMPILATION'
    };
    if (!renderer.cache['colorred']) renderer.cache['colorred'] = {
      type: 'RULE',
      className: '_sjf8sr',
      selector: '._sjf8sr',
      declaration: 'color:red',
      media: '',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px)backgroundColorred']) renderer.cache['(min-height: 300px)backgroundColorred'] = {
      type: 'RULE',
      className: '_trbawt',
      selector: '._trbawt',
      declaration: 'background-color:red',
      media: '(min-height: 300px)',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px)lineHeight2']) renderer.cache['(min-height: 300px)lineHeight2'] = {
      type: 'RULE',
      className: '_jtk9xa',
      selector: '._jtk9xa',
      declaration: 'line-height:2',
      media: '(min-height: 300px)',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px):hovercolorblack']) renderer.cache['(min-height: 300px):hovercolorblack'] = {
      type: 'RULE',
      className: '_wh7g8r',
      selector: '._wh7g8r:hover',
      declaration: 'color:black',
      media: '(min-height: 300px)',
      support: ''
    };
  }

  return {
    _className: '_sjf8sr _trbawt _jtk9xa _wh7g8r',

    fontSize,

    '@media (min-height: 300px)': {
      ':hover': {
        paddingLeft: padding
      }
    }
  };
};

export default createComponent(rule);",
]
`;

exports[`Using babel-plugin-fela should precompile static styles 6`] = `
Array [
  "/__fixtures__/createComponentInvalidRenderer.js",
  "import { createComponent } from 'react-fela';

const rule = ({ fontSize, padding }, { foo }) => {
  return {
    fontSize,
    color: 'red',
    '@media (min-height: 300px)': {
      backgroundColor: 'red',
      lineHeight: 2,
      ':hover': {
        color: 'black',
        paddingLeft: padding
      }
    }
  };
};

export default createComponent(rule);",
]
`;

exports[`Using babel-plugin-fela should precompile static styles 7`] = `
Array [
  "/__fixtures__/createComponentMergeClassName.js",
  "import { createComponent } from 'react-fela';

const rule = ({ fontSize, padding }, renderer) => {
  if (!renderer.cache.foobar_sjf8sr_trbawt_jtk9xa_wh7g8r) {
    renderer.cache.foobar_sjf8sr_trbawt_jtk9xa_wh7g8r = {
      type: 'PRECOMPILATION'
    };
    if (!renderer.cache['colorred']) renderer.cache['colorred'] = {
      type: 'RULE',
      className: '_sjf8sr',
      selector: '._sjf8sr',
      declaration: 'color:red',
      media: '',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px)backgroundColorred']) renderer.cache['(min-height: 300px)backgroundColorred'] = {
      type: 'RULE',
      className: '_trbawt',
      selector: '._trbawt',
      declaration: 'background-color:red',
      media: '(min-height: 300px)',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px)lineHeight2']) renderer.cache['(min-height: 300px)lineHeight2'] = {
      type: 'RULE',
      className: '_jtk9xa',
      selector: '._jtk9xa',
      declaration: 'line-height:2',
      media: '(min-height: 300px)',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px):hovercolorblack']) renderer.cache['(min-height: 300px):hovercolorblack'] = {
      type: 'RULE',
      className: '_wh7g8r',
      selector: '._wh7g8r:hover',
      declaration: 'color:black',
      media: '(min-height: 300px)',
      support: ''
    };
  }

  return {
    _className: 'foo bar _sjf8sr _trbawt _jtk9xa _wh7g8r',

    fontSize,

    '@media (min-height: 300px)': {
      ':hover': {
        paddingLeft: padding
      }
    }
  };
};

export default createComponent(rule);",
]
`;

exports[`Using babel-plugin-fela should precompile static styles 8`] = `
Array [
  "/__fixtures__/createComponentRendererReference.js",
  "import { createComponent } from 'react-fela';

const rule = ({ fontSize, padding }, felaRenderer) => {
  if (!felaRenderer.cache._sjf8sr_trbawt_jtk9xa_wh7g8r) {
    felaRenderer.cache._sjf8sr_trbawt_jtk9xa_wh7g8r = {
      type: 'PRECOMPILATION'
    };
    if (!felaRenderer.cache['colorred']) felaRenderer.cache['colorred'] = {
      type: 'RULE',
      className: '_sjf8sr',
      selector: '._sjf8sr',
      declaration: 'color:red',
      media: '',
      support: ''
    };
    if (!felaRenderer.cache['(min-height: 300px)backgroundColorred']) felaRenderer.cache['(min-height: 300px)backgroundColorred'] = {
      type: 'RULE',
      className: '_trbawt',
      selector: '._trbawt',
      declaration: 'background-color:red',
      media: '(min-height: 300px)',
      support: ''
    };
    if (!felaRenderer.cache['(min-height: 300px)lineHeight2']) felaRenderer.cache['(min-height: 300px)lineHeight2'] = {
      type: 'RULE',
      className: '_jtk9xa',
      selector: '._jtk9xa',
      declaration: 'line-height:2',
      media: '(min-height: 300px)',
      support: ''
    };
    if (!felaRenderer.cache['(min-height: 300px):hovercolorblack']) felaRenderer.cache['(min-height: 300px):hovercolorblack'] = {
      type: 'RULE',
      className: '_wh7g8r',
      selector: '._wh7g8r:hover',
      declaration: 'color:black',
      media: '(min-height: 300px)',
      support: ''
    };
  }

  return {
    _className: '_sjf8sr _trbawt _jtk9xa _wh7g8r',

    fontSize,

    '@media (min-height: 300px)': {
      ':hover': {
        paddingLeft: padding
      }
    }
  };
};

export default createComponent(rule);",
]
`;

exports[`Using babel-plugin-fela should prerender static styles as a separate rule 1`] = `
Array [
  "/__fixtures__/createComponent.js",
  "import { createComponent } from 'react-fela';

const rule = ({ fontSize, padding }, renderer) => {
  if (!renderer.cache.1258790278) {
    renderer.cache.1258790278= {
      type: 'PRERENDERING',
      className: renderer.renderRule(() => ({
        color: 'red',
        '@media (min-height: 300px)': {
          backgroundColor: 'red',
          lineHeight: 2,
          ':hover': {
            color: 'black'
          }
        }
      }))
    };
  }

  return {
    _className: renderer.cache.1258790278.className,

    fontSize, '@media (min-height: 300px)': { ':hover': { paddingLeft: padding
      }
    }
  };
};

export default createComponent(rule);",
]
`;

exports[`Using babel-plugin-fela should prerender static styles as a separate rule 2`] = `
Array [
  "/__fixtures__/createComponentEmbedded.js",
  "import { createComponent } from 'react-fela';

export default createComponent(({ fontSize, padding }, renderer) => {
  if (!renderer.cache.3434345636) {
    renderer.cache.3434345636= {
      type: 'PRERENDERING',
      className: renderer.renderRule(() => ({
        color: 'red',
        '@media (min-height: 300px)': {
          backgroundColor: 'red',
          lineHeight: 2,
          ':hover': {
            color: 'black'
          }
        }
      }))
    };
  }

  return {
    _className: renderer.cache.3434345636.className,

    fontSize, '@media (min-height: 300px)': { ':hover': { paddingLeft: padding
      }
    }
  };
});",
]
`;

exports[`Using babel-plugin-fela should prerender static styles as a separate rule 3`] = `
Array [
  "/__fixtures__/createComponentEmptyParameter.js",
  "import { createComponent } from 'react-fela';

const rule = (_, renderer) => {
  if (!renderer.cache.3904749910) {
    renderer.cache.3904749910= {
      type: 'PRERENDERING',
      className: renderer.renderRule(() => ({
        color: 'red',
        '@media (min-height: 300px)': {
          backgroundColor: 'red',
          lineHeight: 2,
          ':hover': {
            color: 'black'
          }
        }
      }))
    };
  }

  return {
    _className: renderer.cache.3904749910.className
  };
};

export default createComponent(rule);",
]
`;

exports[`Using babel-plugin-fela should prerender static styles as a separate rule 4`] = `
Array [
  "/__fixtures__/createComponentFunctionExpression.js",
  "import { createComponent } from 'react-fela';

function rule({ fontSize, padding }, renderer) {
  if (!renderer.cache.1994830291) {
    renderer.cache.1994830291= {
      type: 'PRERENDERING',
      className: renderer.renderRule(() => ({
        color: 'red',
        '@media (min-height: 300px)': {
          backgroundColor: 'red',
          lineHeight: 2,
          ':hover': {
            color: 'black'
          }
        }
      }))
    };
  }

  return {
    _className: renderer.cache.1994830291.className,

    fontSize, '@media (min-height: 300px)': { ':hover': { paddingLeft: padding
      }
    }
  };
}

export default createComponent(rule);",
]
`;

exports[`Using babel-plugin-fela should prerender static styles as a separate rule 5`] = `
Array [
  "/__fixtures__/createComponentFunctionVariable.js",
  "import { createComponent } from 'react-fela';

const rule = function ({ fontSize, padding }, renderer) {
  if (!renderer.cache.1173747665) {
    renderer.cache.1173747665= {
      type: 'PRERENDERING',
      className: renderer.renderRule(() => ({
        color: 'red',
        '@media (min-height: 300px)': {
          backgroundColor: 'red',
          lineHeight: 2,
          ':hover': {
            color: 'black'
          }
        }
      }))
    };
  }

  return {
    _className: renderer.cache.1173747665.className,

    fontSize, '@media (min-height: 300px)': { ':hover': { paddingLeft: padding
      }
    }
  };
};

export default createComponent(rule);",
]
`;

exports[`Using babel-plugin-fela should prerender static styles as a separate rule 6`] = `
Array [
  "/__fixtures__/createComponentInvalidRenderer.js",
  "import { createComponent } from 'react-fela';

const rule = ({ fontSize, padding }, { foo }) => {
  return {
    fontSize,
    color: 'red',
    '@media (min-height: 300px)': {
      backgroundColor: 'red',
      lineHeight: 2,
      ':hover': {
        color: 'black',
        paddingLeft: padding
      }
    }
  };
};

export default createComponent(rule);",
]
`;

exports[`Using babel-plugin-fela should prerender static styles as a separate rule 7`] = `
Array [
  "/__fixtures__/createComponentMergeClassName.js",
  "import { createComponent } from 'react-fela';

const rule = ({ fontSize, padding }, renderer) => {
  if (!renderer.cache.2598482558) {
    renderer.cache.2598482558= {
      type: 'PRERENDERING',
      className: renderer.renderRule(() => ({
        _className: 'foo bar',

        color: 'red',
        '@media (min-height: 300px)': {
          backgroundColor: 'red',
          lineHeight: 2,
          ':hover': {
            color: 'black'
          }
        }
      }))
    };
  }

  return {
    _className: renderer.cache.2598482558.className,
    fontSize, '@media (min-height: 300px)': { ':hover': { paddingLeft: padding
      }
    }
  };
};

export default createComponent(rule);",
]
`;

exports[`Using babel-plugin-fela should prerender static styles as a separate rule 8`] = `
Array [
  "/__fixtures__/createComponentRendererReference.js",
  "import { createComponent } from 'react-fela';

const rule = ({ fontSize, padding }, felaRenderer) => {
  if (!felaRenderer.cache.3309150636) {
    felaRenderer.cache.3309150636= {
      type: 'PRERENDERING',
      className: felaRenderer.renderRule(() => ({
        color: 'red',
        '@media (min-height: 300px)': {
          backgroundColor: 'red',
          lineHeight: 2,
          ':hover': {
            color: 'black'
          }
        }
      }))
    };
  }

  return {
    _className: felaRenderer.cache.3309150636.className,

    fontSize, '@media (min-height: 300px)': { ':hover': { paddingLeft: padding
      }
    }
  };
};

export default createComponent(rule);",
]
`;
